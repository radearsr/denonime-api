generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model roles {
  roleId        Int             @id @default(autoincrement())
  name          String?         @db.VarChar(50)
  user          users[]
}

model users {
  id            Int             @id @default(autoincrement())
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  username      String?         @db.VarChar(255)
  password      String?         @db.Text
  email         String?         @db.VarChar(200)
  role          roles           @relation(fields: [roleId], references: [roleId])
  roleId        Int
  createdAt     DateTime        @default(now())
}

model authentications {
  token         String          @unique
}

model animes {
  animeId       Int             @id @default(autoincrement())
  title         String?         @db.VarChar(100)
  description   String?         @db.Text
  poster        String?         @db.VarChar(100)
  type          AnimeType       @default(Series)
  releaseDate   DateTime        @db.Date
  status        StatusUpdate    @default(Completed)
  slug          String?         @db.VarChar(100)
  publish       StatusPublish   @default(Publish)  
  createdAt     DateTime        @default(now())
  anime_genres  anime_genres[]
  episodes      episodes[]
}

model genres {
  genreId       Int             @id @default(autoincrement())
  name          String?         @db.VarChar(50)
  anime_genres  anime_genres[]
}

model anime_genres {
  id            Int             @id @default(autoincrement())
  Anime         animes          @relation(fields: [animeId], references: [animeId])
  Genre         genres          @relation(fields: [genreId], references: [genreId])    
  animeId       Int
  genreId       Int
}

model episodes {
  id            Int             @id @default(autoincrement())
  numEpisode    Int             @db.Int
  source360p    String          @db.VarChar(200)
  source480p    String          @db.VarChar(200)
  source720p    String          @db.VarChar(200)
  Anime         animes          @relation(fields: [animeId], references: [animeId])
  animeId       Int
  createdAt     DateTime        @default(now())
  publish       StatusPublish   @default(Publish)
}

enum StatusUpdate {
  Ongoing
  Completed
}

enum AnimeType {
  Movie
  Series
}

enum StatusPublish {
  Publish
  NonPublish
}